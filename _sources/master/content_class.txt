.. include:: ../definition.txt

==============================
|defContentClass| 一覧
==============================

BasicPluginでは、 |defContentClass| 属性に |defContent| の扱い方を指定することができます。

以下に、定義済みの |defContentClass| を示します。

|defCountable|
--------------------
登録された |defContent| を1レコードにまとめて管理します。

APIによる |defInventory| への加算、減算処理の際には対象レコードの ``amount`` 情報に対して操作を行います。

例えば、「素材アイテム」や「回復アイテム」といった個別に扱う必要性がなく、個数で管理したい場合に指定します。

|defUncountable|
--------------------
登録された |defContent| を個別のレコードで管理します。

APIによる |defInventory| への加算、減算処理の際には対象レコードの追加、削除操作を行います。

例えば、「キャラクター」や「武器」といった個数でまとめて扱う必要がなく、それぞれ個別で管理したい場合に指定します。

|defPayment|
--------------------
登録された |defContent| を各プラットフォームで販売されるゲーム内通貨として管理します。

``PAYMENT`` が指定された |defContent| は、 ``max_amount`` が 2147483647 になります。

付与された単位で有効期限を設定する事も可能で、付与および消費された日時と契機を詳細に記録します。



guideの説明部分
------------------------------------------------

* |defCountable|
    |defCountable| が設定された Content は、同じ Content 内で個性を持たず、Inventory の中で1つに纏めて管理します。

    例えば「経験値」は、1つの「経験値」と他の経験値が異なっている必要がなく、また纏めて数値を扱いたいため、 |defCountable| を設定します。

* |defUncountable|
    |defUncountable| が設定された Content は、同じ Content 内で個性を持たせることができ、Inventoryの中でもそれぞれの Content を識別して管理します。

    例えば「武器」は、 |defUncountable| を設定することで、同じ「武器」でも「武器」の性能を変えることができ、個性を持たせることができます。
    また、このため |defCountable| とは違い、同じ Content として定義された「武器」 でも、Inventory の中で扱いを別にして管理できます。

* |defPayment|
    |defPayment| は、各プラットフォームから購入できる課金コンテンツに対して設定します。
    |defPayment| が設定された Content は、通常の Content とは異なり、課金コンテンツとして別に管理することができ、 Inventory に対して付与が行われた単位で纏めて管理し、付与や消費された日時に加えて、何で消費されたかを記録します。

    また、付与された単位で有効期限を設定する事も可能で、課金コンテンツをプラットフォームから購入した場合、そのプラットフォームの有効期限設定がそのまま反映されます。


